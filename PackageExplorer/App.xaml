<Application x:Class="PackageExplorer.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:self="clr-namespace:PackageExplorer" Startup="Application_Startup" Exit="Application_Exit">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Xaml/MenuItems.xaml" />
                <ResourceDictionary Source="Xaml/Toolbar.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <self:IntegerToBooleanConverter x:Key="FontSizeToBoolConverter" />
            <self:BooleanToVisibilityConverter x:Key="invertedBoolToVis" Inverted="True" />
            <self:BooleanToVisibilityConverter x:Key="boolToVis" />
            <self:CountToVisibilityConverter x:Key="countConverter" />
            <self:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <self:NullToBoolConverter x:Key="nullToBoolConverter" />
            <self:AndLogicConverter x:Key="andConverter" />
            <self:SubtracterConverter x:Key="SubtracterConverter" />
            <self:StringShorternerConverter x:Key="StringShorternerConverter" />

            <ContextMenu x:Key="TextBoxContextMenu">
                <self:GrayscaleMenuItem Command="Cut">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="Images/CutHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Copy">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="Images/CopyHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Paste">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="Images/PasteHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
            </ContextMenu>

            <SolidColorBrush Color="#003399" x:Key="TaskDialogMainInstructionBrush" PresentationOptions:Freeze="True" />

            <Style TargetType="{x:Type Image}" x:Key="ImageStyleBase">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Stretch" Value="Uniform" />
            </Style>

            <Style TargetType="{x:Type self:GrayscaleImage}" BasedOn="{StaticResource ImageStyleBase}"></Style>

            <Style TargetType="{x:Type Image}" BasedOn="{StaticResource ImageStyleBase}"></Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0, 4, 3, 0" />
                <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Binding Path="(Validation.Errors).CurrentItem.ErrorContent" RelativeSource="{x:Static RelativeSource.Self}" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Window}">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style TargetType="{x:Type GridSplitter}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                <Setter Property="UIElement.Focusable" Value="False" />
                <Setter Property="ShowsPreview" Value="True" />
                <Setter Property="Background" Value="Transparent" />
            </Style>

            <Style TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Background" Value="White" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                            <DockPanel LastChildFill="True">
                                <Border DockPanel.Dock="Top" Padding="4" Background="#465A7D" CornerRadius="3,3,0,0">
                                    <ContentControl HorizontalAlignment="Center" Foreground="#CCFFFFFF" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                </Border>

                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0,0,2,2">
                                    <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>